classAutomobile:
def__init__(self,make,model,color,year,mileage):
#Privateattributes
self.__make=make
self.__model=model
self.__color=color
self.__year=year
self.__mileage=mileage

#Getmethods
defget_make(self):
returnself.__make

defget_model(self):
returnself.__model

defget_color(self):
returnself.__color

defget_year(self):
returnself.__year

defget_mileage(self):
returnself.__mileage

#Setmethods
defset_make(self,make):
self.__make=make

defset_model(self,model):
self.__model=model

defset_color(self,color):
self.__color=color

defset_year(self,year):
self.__year=year

defset_mileage(self,mileage):
self.__mileage=mileage

#Methodtodisplayautomobiledetails
defdisplay_info(self):
returnf"{self.__year}{self.__make}{self.__model}({self.__color}),Mileage:{self.__mileage}miles"

classDealershipInventory:
def__init__(self):
#InventorywillholdalistofAutomobileobjects
self.inventory=[]

#Methodtoaddanewvehicle
defadd_vehicle(self,automobile):
self.inventory.append(automobile)

#Methodtoremoveavehiclebyindex
defremove_vehicle(self,index):
if0<=index<len(self.inventory):
delself.inventory[index]
else:
print("Invalidindex,vehiclenotremoved.")

#Methodtoupdatevehicleattributesbyindex
defupdate_vehicle(self,index,make=None,model=None,color=None,year=None,mileage=None):
if0<=index<len(self.inventory):
automobile=self.inventory[index]
ifmake:
automobile.set_make(make)
ifmodel:
automobile.set_model(model)
ifcolor:
automobile.set_color(color)
ifyear:
automobile.set_year(year)
ifmileage:
automobile.set_mileage(mileage)
else:
print("Invalidindex,vehiclenotupdated.")

#Methodtooutputallvehicleinventorytoatextfile
defoutput_inventory(self,filename):
withopen(filename,'w')asfile:
forvehicleinself.inventory:
file.write(vehicle.display_info()+"\n")

#Methodtodisplayallvehiclesininventory
defdisplay_inventory(self):
forindex,vehicleinenumerate(self.inventory):
print(f"{index}:{vehicle.display_info()}")


if__name__=="__main__":
dealership=DealershipInventory()

#Addvehicles
car1=Automobile("Toyota","Camry","Red",2020,15000)
car2=Automobile("Honda","Civic","Blue",2018,30000)
car3=Automobile("Ford","Mustang","Black",2021,5000)

dealership.add_vehicle(car1)
dealership.add_vehicle(car2)
dealership.add_vehicle(car3)

#Displayinventory
print("InitialInventory:")
dealership.display_inventory()

#Updateavehicle
dealership.update_vehicle(1,color="Green",mileage=32000)
print("\nUpdatedInventory:")
dealership.display_inventory()

#Removeavehicle
dealership.remove_vehicle(0)
print("\nInventoryafterremoval:")
dealership.display_inventory()

#Outputtoatextfile
dealership.output_inventory("inventory.txt")
print("\nInventoryhasbeensavedto'inventory.txt'")
